{"version":3,"sources":["components/shapes/MovieShape.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieShape","Title","PropTypes","string","Plot","Poster","imdbUrl","MovieCard","React","memo","className","src","alt","href","propTypes","defaultProps","MoviesList","movies","map","movie","key","imdbID","FindMovie","setMovies","useState","foundMovie","setFoundMovie","movieTitle","setMovieTitle","errorMessage","setErrorMessage","hasServerError","setServerError","getMovie","e","a","preventDefault","title","fetch","then","response","ok","Error","status","statusText","json","film","Response","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","disabled","onClick","some","App","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.028c7820.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const MovieShape = {\n  Title: PropTypes.string,\n  Plot: PropTypes.string,\n  Poster: PropTypes.string,\n  imdbUrl: PropTypes.string,\n};\n","import React from 'react';\nimport './MovieCard.scss';\nimport { MovieShape } from '../shapes/MovieShape';\n\nexport const MovieCard = React.memo(({\n  Title,\n  Plot = '',\n  Poster,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n));\n\nMovieCard.propTypes = MovieShape;\n\nMovieCard.defaultProps = {\n  Title: '',\n  Plot: '',\n  Poster: '',\n  imdbUrl: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbID} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbID: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilm } from '../../api/api';\nimport { MovieShape } from '../shapes/MovieShape';\n\nexport const FindMovie = ({ setMovies, movies }) => {\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [hasServerError, setServerError] = useState(false);\n\n  const reset = () => {\n    setMovieTitle('');\n    setFoundMovie(null);\n  };\n\n  const handleChange = (e) => {\n    setErrorMessage('');\n    setMovieTitle(e.target.value);\n  };\n\n  const onAddClick = () => {\n    const isAdded = movies.some(movie => movie.imdbID === foundMovie.imdbID);\n\n    if (isAdded) {\n      setErrorMessage('Movie has been added already');\n    } else {\n      setMovies([...movies, foundMovie]);\n      setErrorMessage('');\n      reset();\n    }\n  };\n\n  const getMovie = async(e) => {\n    e.preventDefault();\n    try {\n      const film = await getFilm(movieTitle);\n\n      if (film.Response === 'False') {\n        setErrorMessage(film.Error);\n      } else {\n        setErrorMessage('');\n      }\n\n      setFoundMovie({\n        ...film,\n        imdbUrl: `https://www.imdb.com/title/${film.imdbID}`,\n      });\n\n      setServerError(false);\n    } catch (error) {\n      setServerError(true);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={getMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorMessage && 'is-danger'}`}\n              value={movieTitle}\n              onChange={handleChange}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!foundMovie || errorMessage}\n              onClick={onAddClick}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {foundMovie && foundMovie.Response === 'True' && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...foundMovie} />\n        </div>\n      )}\n      {hasServerError && (\n        <div className=\"notification is-danger\">\n          <strong>Problem with server...Try again later</strong>\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  setMovies: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape(MovieShape)).isRequired,\n};\n","const API_URL = `http://omdbapi.com/?apikey=300b7b6c&t=`;\n\nexport const getFilm = title => fetch(`${API_URL}${title}`)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}